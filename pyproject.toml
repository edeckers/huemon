[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
authors = ["Ely Deckers"]
classifiers = [
    "Environment :: Console",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: System :: Logging",
    "Topic :: System :: Monitoring",
]
description = "Monitor your Philips Hue network"
documentation = "https://github.com/edeckers/huemon"
homepage = ""
include = [
    "LICENSE",
]
keywords = [
    "Hue",
    "Monitoring",
    "Zabbix",
    "Zigbee",
]
license = "MPL-2.0"
maintainers = ["Ely Deckers"]
name = "huemon"
readme = "README.md"
repository = "https://github.com/edeckers/huemon.git"
version = "1.0.3"

[tool.poetry.dependencies]
fastapi = "^0.103.0"
python = "^3.8"
PyYAML = "^6.0"
types-PyYAML = "^6.0.4"
uvicorn = "^0.17.5"
pyella = "^2.0.0"

[tool.poetry.dev-dependencies]
black = "^23.3.0"
bandit = "^1.7"
coverage = {extras = ["toml"], version = "^6.3.2"}
isort = "^5.12.0"
mypy = "^1.0.0"
nox = "^2022.1.7"
pre-commit = "^2.17"
pre-commit-hooks = "^4.1"
pytest = "^7"
pytest-cov = "^4"
python-semantic-release = "^8.0.8"
twine = "^4.0.2"

#########################################################################################
# Testing
#########################################################################################

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.coverage.report]
show_missing = true
fail_under = 90

[tool.coverage.html]
directory = "reports/coverage/html"

[tool.coverage.xml]
output = "reports/coverage/coverage.xml"

#########################################################################################
# Style checking
#########################################################################################

[tool.bandit]

[tool.black]
target-version = ["py38", "py39"]

[tool.isort]
profile = "black"

#########################################################################################
# Publishing
#########################################################################################

[tool.semantic_release]
build_command = "poetry build"
commit_message = "chore: release {version}"
version_toml = ["pyproject.toml:tool.poetry.version"]

[tool.semantic_release.branches.develop]
match = "develop"
